{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","classNames","App","NotFoundPage","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","born","died","fatherName","father","motherName","mother","sex","slug","personSlug","useParams","PeoplePage","useState","isLoading","setIsLoading","hasError","setHasError","people","setPeople","useEffect","peopleFromServer","map","find","dad","mom","getPreparedPeople","catch","finally","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.de60f9c3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\n\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    born,\n    died,\n    fatherName,\n    father,\n    motherName,\n    mother,\n    sex,\n    slug,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === personSlug\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <Link\n          className={sex === 'f'\n            ? 'has-text-danger'\n            : ''}\n          to={`../${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      { mother && (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={`../${mother.slug}`}\n          >\n            {mother.name}\n          </Link>\n        </td>\n      )}\n\n      { !mother && motherName && (\n        <td>{motherName}</td>\n      )}\n\n      { !mother && !motherName && (\n        <td>-</td>\n      )}\n\n      { father && (\n        <td>\n          <Link\n            to={`../${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        </td>\n      )}\n\n      { !father && fatherName && (\n        <td>{fatherName}</td>\n      )}\n\n      { !father && !fatherName && (\n        <td>-</td>\n      )}\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PersonLink } from '../components/PersonLink/PersonLink';\n\nconst getPreparedPeople = (people: Person[]) => {\n  return people.map(person => {\n    const father = people.find(dad => dad.name === person.fatherName);\n    const mother = people.find(mom => mom.name === person.motherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !people.length) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    key={person.slug}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}